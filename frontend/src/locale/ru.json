{
  "title_1": "Анализатор уязвимостей веб-приложений",
  "title_2": "Параметры сканирования",
  "title_3": "Подтвердить цель",
  "title_4": "Информационная таблица",
  "url_1": "Вставить URL для проверки",
  "url_2": " Куки",
  "options_heading_1": "Конфигурация",
  "options_heading_2": "Конфигурация SQLMap",
  "options_heading_3": "Конфигурация XSStrike",
  "options_heading_4": "Конфигурация See-Surf",
  "options_tab_1": "SQL Инъекция",
  "options_tab_2": "XSS",
  "options_tab_3": "SSRF",
  "options_select_1": " Уровень вербальности",
  "options_select_2": "Уровень выполнения теста",
  "options_select_3": "Риск тестирования",
  "options_select_4": "Уровень ползания",
  "options_select_5": "Веб-сервер/burp коллаборатор для обратного подключения для проверки параметров SSRF",
  "options_ssrf_text": "Включите свой веб-сервер для валидации уязвимых параметров",
  "button_1": "Вставить",
  "button_2": "Показать опции",
  "button_3": "Добавить в очередь",
  "button_4": "Анализировать",
  "button_5": "Анализируется",
  "error_1": "Неверный формат URL - например, https://www.google.com ; http://google.com ; http://localhost/",
  "error_2": "Пожалуйста, заполните все необходимые поля",
  "error_3": "Добавьте цель в список перед анализом",
  "table_status_1": "Ошибка",
  "table_status_2": "Ожидание",
  "table_status_3": "Выполнено",
  "table_val_1": "Цель",
  "table_val_2": "URL",
  "table_val_3": " Куки",
  "table_val_4": "Статус",
  "table_val_5": "Результаты",
  "table_delete": "Удалить",
  "table_bottom_heading": "Информация о цели",
  "radiobox_val_1": "Включено",
  "radiobox_val_2": "Отключено",
  "checkbox_val_1": "SQL Инъекция",
  "checkbox_val_2": "XSS",
  "checkbox_val_3": "SSRF",
  "form_helper_1": "Обязательно настройте параметры сканирования для достижения наилучших результатов",
  "form_helper_2": "URL-адрес обязателен",
  "res_title_1": "Результаты анализа",
  "res_title_2": "Сводка",
  "res_title_3": "Статистика",
  "res_title_4": "Серьезность каждой уязвимости",
  "res_title_5": "Рекомендации",
  "res_tab_1": "Информация о цели",
  "res_tab_2": "SQL Инъекция",
  "res_tab_3": "XSS",
  "res_tab_4": "SSRF",
  "res_info_1": " Цель:",
  "res_info_2": "Статус:",
  "res_info_3": "URL:",
  "res_statistics_val": "Процент уязвимостей, найденных в веб-приложении из всех",
  "res_seriousness_val": "Обратите внимание, что серьезность каждой уязвимости субъективна и зависит от конкретных особенностей вашего приложения. Тем не менее, вот общий обзор серьезности потенциальных уязвимостей, найденных в веб-приложении:",
  "res_recommend_sqli": " уязвимости могут быть уменьшены путем использования параметризованных запросов или подготовленных операторов, которые отделяют SQL-код от данных. Кроме того, ограничьте привилегии учетных записей баз данных, используемых веб-приложениями, до необходимого минимума. Регулярно обновляйте и исправляйте программное обеспечение баз данных. Обратитесь к разделу \"Результаты анализа\" выше, чтобы найти конкретный вектор атаки, нагрузку и тип, который мог вызвать эту проблему. Это даст представление о точной природе уязвимости SQLi в вашем случае.",
  "res_recommend_xss": " Для предотвращения XSS проверяйте, анализируйте и экранируйте пользовательский ввод. Внедрите заголовки Content Security Policy (CSP) для предотвращения загрузки вредоносных скриптов. Используйте брандмауэры веб-приложений и регулярно обновляйте и ставьте заплатки на все программное обеспечение. Обратитесь к разделу \"Результаты анализа\" выше, чтобы найти конкретный вектор/нагрузку и тип атаки, которая могла вызвать эту проблему. Это даст представление о точной природе XSS-уязвимости в вашем случае.",
  "res_recommend_ssrf": " может быть уменьшена путем проверки и обработки пользовательского ввода, ограничения исходящего трафика с веб-сервера и использования списков разрешений для исходящих соединений. Если возможно, отключите перенаправление URL и разрешите вашему приложению делать запросы только к известным, безопасным URL. Обратитесь к разделу \"Результаты анализа\" выше, чтобы найти конкретный вектор/нагрузку и тип атаки, которая могла вызвать эту проблему. Это даст представление о точной природе уязвимости SSRF в вашем случае.",
  "res_recommend_none": "Уязвимости не найдены! Помните, что это не означает, что безопасность вашего веб-приложения не нуждается в дальнейшем укреплении. Важно иметь комплексный план безопасности и учитывать все аспекты безопасности вашего приложения. Всегда рассматривайте возможность найма профессионального аудитора безопасности для оценки безопасности вашего приложения.",
  "res_summary_table_td_1": "Уязвимость",
  "res_summary_table_td_2": "Присутствие",
  "res_sqli_td_1": "Свойство",
  "res_sqli_td_2": "Значение",
  "res_sqli_td_3": "Время",
  "res_sqli_td_4": "Уровень",
  "res_sqli_td_5": "Сообщение",
  "res_sqli_title_1": "Журналы SQL-инъекций",
  "res_sqli_title_2": "Данные SQL-инъекции",
  "res_xss_title_1": "Информация о журналах",
  "res_xss_title_2": "Информация о потенциальных уязвимостях",
  "res_xss_td_1": "Временная метка",
  "res_xss_td_2": "Модуль",
  "res_xss_td_3": "Тип",
  "res_xss_td_4": "Сообщение",
  "res_ssrf_td_1": "Цель",
  "res_ssrf_td_2": "Журналы",
  "res_ssrf_td_3": "Информация",
  "res_ssrf_title_1": "Журнал",
  "res_ssrf_title_2": "Уязвимые параметры",
  "verbose": "Эта опция может быть использована для установки уровня многословности выводимых сообщений. Существует семь уровней многословности. По умолчанию используется уровень 1, при котором отображаются информация, предупреждение, ошибка, критические сообщения и трассировки Python (если они есть). 0: Показать только отслеживание Python, ошибки и критические сообщения.\n 1: Показать также информационные и предупреждающие сообщения.\n 2: Показать также отладочные сообщения.\n 3: Показать также внедренные полезные нагрузки.\n 4: Показать также HTTP запросы.\n 5: Показать также заголовки HTTP ответов.\n 6: Показать также содержание страницы HTTP ответов.'' + 'Разумным уровнем многословности для дальнейшего понимания того, что sqlmap делает под капотом, является уровень 2, в основном для фазы обнаружения и функций поглощения. Если же вы хотите увидеть полезную нагрузку SQL, которую посылает инструмент, то лучшим выбором будет уровень 3. Этот уровень также рекомендуется использовать, когда вы сообщаете разработчикам о потенциальной ошибке. Для дальнейшей отладки потенциальных ошибок или неожиданного поведения мы рекомендуем вам установить уровень сложности 4 или выше.",
  "level": "Эта опция требует наличия аргумента, указывающего на уровень выполняемых тестов. Существует пять уровней. По умолчанию используется значение 1, при котором выполняется ограниченное количество тестов (запросов). И наоборот, на уровне 5 будет проводиться подробная проверка на гораздо большее количество полезных нагрузок и границ (в виде пары префикса и суффикса полезной нагрузки SQL).\n Эта опция влияет не только на то, какую полезную нагрузку пытается проверить sqlmap, но и на то, какие точки инъекции будут рассматриваться: GET и POST параметры проверяются всегда, значения заголовков HTTP Cookie проверяются со второго уровня, а значения заголовков HTTP User-Agent/Referer - с третьего.\n В целом, чем сложнее обнаружить SQL-инъекцию, тем выше должен быть установлен уровень --level.",
  "risk": "Эта опция требует аргумента, который указывает риск тестов, которые необходимо выполнить. Существует три значения риска. Значение по умолчанию равно 1, которое является безобидным для большинства точек SQL-инъекции. Значение риска 2 добавляет к уровню по умолчанию тесты на тяжелые SQL-инъекции, основанные на времени запроса, а значение 3 добавляет также тесты на SQL-инъекции на основе OR.\n В некоторых случаях, например, при SQL-инъекции в операторе UPDATE, внедрение полезной нагрузки на основе OR может привести к обновлению всех записей в таблице, что, конечно, не то, чего хочет злоумышленник. По этой и другим причинам была введена эта опция: пользователь имеет контроль над тем, какие полезные нагрузки тестируются, он может произвольно выбрать использование и потенциально опасных. Как и в предыдущей опции, полезные нагрузки, используемые sqlmap, указаны в текстовом файле xml/payloads.xml, и вы можете свободно редактировать и добавлять свои собственные.",
  "randomAgent": "Использовать случайно выбранное значение заголовка HTTP User-Agent. По умолчанию sqlmap выполняет HTTP-запросы со следующим значением заголовка User-Agent: sqlmap/1.0-dev-xxxxxxx (http://sqlmap.org). Более того, если указать ключ --random-agent, sqlmap будет случайным образом выбирать User-Agent из текстового файла ./txt/user-agents.txt и использовать его для всех HTTP-запросов в рамках сессии.",
  "skipWaf": "Пропускать эвристическое обнаружение WAF/IPS-защиты. По умолчанию sqlmap автоматически отправляет внутри одного из стартовых запросов фиктивное значение параметра, содержащее заведомо подозрительную полезную нагрузку SQL-инъекции (например, ...&foobar=AND 1=1 UNION ALL SELECT 1,2,3,table_name FROM information_schema.tables WHERE 2>1). Если цель отвечает не так, как на оригинальный запрос, есть большая вероятность, что она находится под какой-либо защитой.\n sqlmap автоматически попытается определить защиту бэкенда WAF/IPS (если таковая имеется), чтобы пользователь мог предпринять соответствующие шаги (например, использовать скрипты вскрытия с --tamper). В настоящее время поддерживается около 80 различных продуктов (Airlock, Barracuda WAF и т.д.). В случае возникновения каких-либо проблем, пользователь может отключить весь этот механизм, предоставив переключатель skip-waf.",
  "ignoreProxy": "Игнорировать системные настройки прокси по умолчанию. Переключатель ignore-proxy следует использовать, когда вы хотите запустить sqlmap против целевой части локальной сети, игнорируя установленные в системе настройки прокси-сервера HTTP(S).",
  "ignoreRedirects": "Игнорировать попытки перенаправления",
  "ignoreTimeouts": "Игнорировать таймауты соединения",
  "tor": "Используйте сеть анонимности Tor. Если по каким-либо причинам вам необходимо сохранить анонимность, вместо того, чтобы обходить один предопределенный HTTP(S) прокси-сервер, вы можете настроить Tor-клиент вместе с Privoxy (или аналогичным) на своей машине, как это описано в руководстве по установке Tor. Тогда вы можете использовать ключ --tor и sqlmap попытается автоматически установить настройки соединения с Tor-прокси.\n В случае, если вы хотите вручную установить тип и порт используемого Tor-прокси, вы можете сделать это с помощью опций --tor-type и --tor-port (например, --tor-type=SOCKS5 --tor-port 9050).\n Настоятельно рекомендуется использовать --check-tor время от времени, чтобы убедиться, что все настроено правильно. Бывают случаи, когда пакеты Tor (например, Vidalia) приходят неправильно настроенными (или сбрасывают ранее установленную конфигурацию), давая вам ложное чувство анонимности. Используя этот переключатель, sqlmap проверит, что все работает так, как ожидалось, отправив один запрос на официальную страницу Are you using Tor? перед любыми целевыми запросами. Если проверка не удалась, sqlmap предупредит вас и резко завершит работу.",
  "checkTor": "Проверить, правильно ли используется Tor",
  "parseErrors": "Разбор и отображение сообщений об ошибках СУБД из ответов. Если веб-приложение настроено в режиме отладки так, что оно отображает в HTTP-ответах сообщения об ошибках внутренней системы управления базами данных, sqlmap может разобрать и отобразить их для вас.\n Это полезно для отладки, например, чтобы понять, почему определенное перечисление или переключатель поглощения не работает - это может быть связано с привилегиями пользователя сессии, и в этом случае вы увидите сообщение об ошибке СУБД типа Access denied for user SESSION USER.",
  "skipStatic": "Пропускать тестирование параметров, которые не кажутся динамическими",
  "keepAlive": "Этот параметр указывает sqlmap использовать постоянные HTTP(s) соединения.\n Обратите внимание, что этот параметр несовместим с параметром --proxy.",
  "hpp": "HTTP parameter pollution (HPP) - это метод обхода защитных механизмов WAF/IPS (объясняется здесь), который особенно эффективен против платформ ASP/IIS и ASP.NET/IIS. Если вы подозреваете, что цель находится за такой защитой, вы можете попытаться обойти ее с помощью этого переключателя.",
  "chunked": "Использовать HTTP-запросы с кодировкой передачи в виде кусков (POST)",
  "forceSSL": "В случае если пользователь хочет принудительно использовать SSL/HTTPS запросы к цели, он может использовать этот переключатель. Это может быть полезно в случаях, когда урлы собираются с помощью опции --crawl или когда журнал Burp предоставляется с помощью опции -l.",
  "batch": "Если вы хотите, чтобы sqlmap запускался как пакетный инструмент, без какого-либо участия пользователя, когда sqlmap этого требует, вы можете сделать это с помощью переключателя --batch. В этом случае sqlmap будет работать по умолчанию, когда потребуется участие пользователя.",
  "skipUrlEncode": "Пропускать URL-кодирование данных полезной нагрузки. В зависимости от размещения параметра (например, GET) его значение может быть по умолчанию закодировано в URL. В некоторых случаях внутренние веб-серверы не следуют стандартам RFC и требуют, чтобы значения передавались в сыром некодированном виде. Используйте --skip-urlencode в таких случаях.",
  "getAll": "Этот переключатель может быть использован в ситуациях, когда пользователь хочет получить все удаленно доступные данные с помощью одного переключателя. Это не рекомендуется, так как будет генерироваться большое количество запросов, извлекающих как полезные, так и бесполезные данные.",
  "skipHeuristics": "Пропустить эвристическое обнаружение уязвимостей SQLi/XSS",
  "forms": "Скажем, вы хотите проверить на SQL-инъекции огромную поисковую форму или протестировать обход входа в систему (обычно только два поля ввода, например, имя пользователя и пароль), вы можете либо передать sqlmap запрос в файле запроса (-r), либо установить POSTed данные соответствующим образом (--data), либо позволить sqlmap сделать это за вас! \n Оба вышеупомянутых случая, а также многие другие, появляются как теги формы и ввода в HTML-теле ответа, и именно здесь вступает в игру этот переключатель.\n Предоставьте sqlmap параметр --forms, а также страницу, на которой находится форма, в качестве целевого URL (-u), и sqlmap запросит для вас целевой URL, разберет имеющиеся в нем формы и проведет вас через проверку на SQL-инъекции по полям ввода (параметрам) формы, а не по указанному целевому URL.",
  "getDbs": "Когда пользователь сессии имеет доступ на чтение к системной таблице, содержащей информацию о доступных базах данных, можно перечислить список баз данных.",
  "crawlingLevel": "Этот параметр позволяет указать глубину ползания",
  "crawl": "Запустить ползание с целевой веб-страницы для поиска целей и проверить их",
  "skipDOM": "Вы можете пропустить сканирование DOM XSS во время ползания, чтобы сэкономить время",
  "blindXSS": "Использование этой опции во время ползания заставит XSStrike внедрить вашу слепую XSS полезную нагрузку, определенную в core/config.py для внедрения в каждый параметр каждой HTML-формы.",
  "fuzzing": "Фаззер предназначен для тестирования фильтров и брандмауэров веб-приложений. Он мучительно медленный, поскольку посылает запросы со случайной* задержкой, и задержка может достигать 30 секунд.",
  "sP": "Запустите burpsuite collaborator и передайте хост с параметром -p Или запустите простой http-сервер python и подождите, пока уязвимый параметр выполнит ваш запрос. (Настоятельно рекомендуется)\n (Это в основном помогает в эксплуатации GET запросов, для POST вам нужно будет попробовать использовать его вручную)\n Полезная нагрузка будет выполняться с параметром в конце строки, так что легко определить, какой из них уязвим. Например: http://72.72.72.72:8000/vulnerableparam"
}